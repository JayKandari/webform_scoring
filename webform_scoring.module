<?php


function webform_scoring_menu(){
	$items = array();

	$items['node/%webform_menu/webform/scoring-rules'] = array(
		'title' => 'Scoring Rules',
		'page callback' => 'webform_scoring_scoring_rules',
		'page arguments' => array(1),
		'access callback' => 'webform_results_access',
		'access arguments' => array(1),
		'weight' => 6,
		'type' => MENU_LOCAL_TASK,
	);

	$items['node/%webform_menu/webform-results/scores'] = array(
		'title' => 'Scores',
		'page callback' => 'webform_scoring_scores',
		'page arguments' => array(1),
		'access callback' => 'webform_results_access',
		'access arguments' => array(1),
		'weight' => 6,
		'type' => MENU_LOCAL_TASK,
	);

	return $items;
}

function webform_scoring_theme($existing, $type, $theme, $path){
	$themes = array();

	$themes['webform_scoring_scoring_rules'] = array(
		'template' => 'webform_scoring_scoring_rules',
		'variables' => array(),
	);
	$themes['webform_scoring_enable'] = array(
		'template' => 'webform_scoring_enable',
		'variables' => array(),
	);

	return $themes;
}

function webform_scoring_scoring_rules($node){
	/**
	 *
	 */

	#dsm($node);
	//  Check whether this webform is enabled or not?
	$result = db_select('webform_scoring_enabled_webforms', 'a')->fields('a')->condition('a.nid',$node->webform['nid'],'=')->execute()->fetchAll();
	#dsm($result);

	if($_SERVER['REQUEST_METHOD'] == "POST") {
		$redirect_to = current_path();
		switch ($_POST['form_token']) {
			case md5('insert_new_rule'):
				if(count($result) > 0 && $result[0]->enabled == 1){
					$result = db_insert('webform_scoring_values_scores_pair')
	                    ->fields(array(
	                      'nid' => $node->webform['nid'],
	                      'cid' => $_POST['cid'],
	                      'value_score_pair' => $_POST['vs_pair'],
	                    ))
	                    ->execute();
					drupal_set_message( ($result)? "Scoring Rule Added" : "Error occured while adding Scoring Rules.");
				}
				break;
			case md5('enable_scoring'):
				if(count($result) == 0){
					$cid = create_a_new_hidden_component($node->nid);
					$result = db_insert('webform_scoring_enabled_webforms')
	                    ->fields(array(
	                      'nid' => $node->webform['nid'],
	                      'enabled' => 1,
	                      'cid' => $cid,
	                    ))
	                    ->execute();
					drupal_set_message( ($result)? "Scoring Enabled" : "Error occured while enabling Scoring.");
				}else if( count($result) == 1 && $result[0]->enabled == 0){
					$cid = create_a_new_hidden_component($node->nid);
					$result = db_update('webform_scoring_enabled_webforms')
						->expression("enabled", 1)
						->expression("cid", $cid)
	                    ->condition('nid', $node->webform['nid'])
	                    ->execute();
					drupal_set_message( ($result)? "Scoring Enabled" : "Error occured while enabling Scoring.");
				}

				break;
			case md5('disable_scoring'):
				delete_custom_hidden_component($node->nid, $result[0]->cid);
				if( count($result) == 1 && $result[0]->enabled == 1){
					$result = db_update('webform_scoring_enabled_webforms')
						->expression("enabled", 0)
						->expression("cid", 0)
	                    ->condition('nid', $node->webform['nid'])
	                    ->execute();
					drupal_set_message( ($result)? "Scoring Disabled" : "Error occured while enabling Scoring.");
				}
				break;
			
			default:
				# code...
				break;
		}
		drupal_goto($redirect_to);
	}

#error_reporting(E_ALL);
#ini_set("display_errors", 1);

	// ---------------------------------------------------------------------------------------------------------------
	if(count($result) > 0 && $result[0]->enabled == 1){
		$result = db_select('webform_scoring_values_scores_pair', 'a')->fields('a')->condition('a.nid',$node->webform['nid'],'=')->execute()->fetchAll(PDO::FETCH_ASSOC);
		#dsm($result);

		$component_table_body = array();
		$count = 0;
		foreach ($result as $item) {	
				
				$p_item['sl'] = ++$count;
				$p_item['cid'] = $node->webform['components'][$item['cid']]['name'];
				$p_item['type'] = $node->webform['components'][$item['cid']]['type'];
				$p_item['value_score_pair'] = $item['value_score_pair'];
				$p_item['actions'] = "edit | delete";
				array_push($component_table_body, $p_item);
		}
		/**
		 * @note : array_column() works with php >= 5.5 
		 */
		$used_components = array_column($result, 'cid');
		$used_vs_pairs = array_column($result, 'value_score_pair');
		#dsm($used_components);
		$all_components = $node->webform['components'];
		#echo 'TESTING';

		$available_components = array();
		foreach ($all_components as $com) {
			if(!in_array( $com['cid'], $used_components) ){
				array_push($available_components, $com);
			}
		}

		#dsm($available_components);

		$headers = array("Sl", "Component", "Type", "Value|Score", "Actions");

		$output = theme('webform_scoring_scoring_rules', array('node'=>$node, 'components'=>$available_components, 'scoring_count'=> count($component_table_body)));
		$output .= theme('table', array( 'header' => $headers, 'rows' => $component_table_body, 'attributes' => array('class' => array('mytable')) ));
	}else{
		drupal_set_message("Scoring is not enabled for this webform. Click the checkbox to enable Scoring in this webform. ");
		$output = theme('webform_scoring_enable', array('node'=>$node, ));
	}

	return $output;
}	

function delete_custom_hidden_component($nid, $cid=9999){
	$node = node_load($nid);
	#dsm($node);

	unset($node->webform['components'][$cid]);
	node_save($node);
}



function create_a_new_hidden_component($nid, $new_component="Webform Quiz - Score", $cid=9999, $pid=0){
    $node = node_load($nid);
    $cid = max(array_keys($node->webform['components']))+1;
    $processed_name  = str_replace(' ', '_', strtolower($new_component));
    // Create the webform components array. Not sure if we need all these
    // values, but let's be sure.
    $component = array(
      'cid' => $cid,
      'pid' => 0,#(int)$pid,
      'nid' =>  (int)$node->nid,
      // I don't trust the admin to make a key based on input :)
      'form_key' => "webform_scoring_hidden_answer",
      'name' => $new_component,
      // I want all lines to be numeric type component.
      'type' => 'hidden',
      'value' => '0',
      'extra' => array(),
      'mandatory' => '0',
      'weight' => -1,
      'page_num' => 1,
    );

    array_push($node->webform['components'], $component);
    node_save($node);

    drupal_set_message("{$new_component} component successfully created in {$node->title}");
    return $cid;
}

function webform_scoring_webform_submission_presave($node, &$submission) {
	#dsm($node);
	#dsm($submission);
	#drupal_set_message(t('before submission presave. :) :)'));

	$result = db_select('webform_scoring_enabled_webforms', 'a')->fields('a')->condition('a.nid',$node->webform['nid'],'=')->execute()->fetchAll();
	#dsm($result);
	if($result[0]->enabled == 1){ // this webform is enabled.
		$result_cid = $result[0]->cid;	
		$total_score = 0;
		// Now get all Values-Score pairs
		$result = db_select('webform_scoring_values_scores_pair', 'a')->fields('a')->condition('a.nid',$node->webform['nid'],'=')->execute()->fetchAll(PDO::FETCH_ASSOC);

		$score_key = array();
		$cid_list = array();
		//$component = array();
		foreach ($result as $item) {	
			$pairs = array();
			$score_key[$item['cid']]['cid'] = $item['cid'];
			array_push($cid_list, $item['cid']);
			$lines = explode("\n", trim($item['value_score_pair']));
			foreach ($lines as $com_val) {
				$pair = array();
				$com_val = explode("|", $com_val);
				$pair['value'] = $com_val[0]; 
				$pair['score'] = $com_val[1];
				array_push($pairs, $pair);
			}
			$score_key[$item['cid']]['pairs'] = $pairs;
			//array_push($score_key, $component);
		}
		foreach ($submission->data as $key => $value) {
			if(in_array($key, $cid_list)){
				foreach ($score_key[$key]['pairs'] as $vs_pair) {
					if($value[0] == $vs_pair['value']){
						$total_score += $vs_pair['score'];
					}
				}
			}
		}
		#dsm($score_key);
		drupal_set_message("Caluclated result : ".$total_score);
		$submission->data[$result_cid][0] = $total_score;
	}
}


function webform_scoring_scores($node){
	$output = "Hi, This is a Score page. ";

	return $output;
}

function search($array, $key, $value)
{
    $results = array();

    if (is_array($array)) {
        if (isset($array[$key]) && $array[$key] == $value) {
            $results[] = $array;
        }

        foreach ($array as $subarray) {
            $results = array_merge($results, search($subarray, $key, $value));
        }
    }

    return $results;
}